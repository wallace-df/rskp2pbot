start: |
  This bot will help you complete P2P transactions through RSK.

  Once you start up the bot, you can use the following commands:

  1. Publish your order using the /buy or /sell command and follow the instructions. 
  
  2. The bot will publish your order in the ${channel} channel so other users can take them.

  3. You can cancel your order at any time BEFORE another user takes by using with the /cancel command.

  4. Once somebody takes your sell order:
    - The bot will ask the buyer to provide the wallet address to receive the tokens. The buyer will have ${paymentWindow} minutes to inform the wallet address, or the order will be automatically cancelled and republished.
    - After the buyer provides the wallet address, the bot will ask you to lock tokens in a smart contract. You'll have ${paymentWindow} minutes to lock the tokens, or the order will be automatically cancelled and any locked tokens will be refunded to you.
    - Once the tokens are locked, the bot will reveal who the buyer is so that you send instructions to get your FIAT payment.
    - Once you receive the FIAT payment from the buyer, you must release the tokens from the smart contract to the buyer.

  5. Once somebody takes your buy order:
    - The bot will ask the seller to lock tokens in a smart contract. The seller will have ${paymentWindow} minutes to lock the tokens, or the order will be automatically cancelled and republished.
    - Once the tokens are locked, the bot will put you in contact with the seller so that you can get the instructions to send the FIAT payment.
    - Once you make the FIAT payment, you should indicate that by using the /fiatsent command and wait for the seller to release the tokens to you.

  6. If at any stance you cannot carry out the trade, you can use the /dispute command to call in admins to bring a solution. 

  7. If your order has been taken and you want to cancel it, you can proceed with a cooperative cancellation (if both parties agree). You both should use /cancel command.

  Make a quick and safe transaction!
init_bot_error: to use this bot you need to first initialize it with the command /start
non_handle_error: üë§ To use this bot you need to activate your Telegram Username. To activate it, open the hamburger menu on the top left and select Settings -> Edit profile -> Username
help: |
  /sell <_token amount_> <_token code_> <_fiat amount_> <_fiat code_> <_payment method_> [premium/discount] - Creates a Sell order
  /buy <_token amount_> <_token code_> <_wallet address_> <_fiat amount_> <_Fiat code_> <_payment method_> [premium/discount] - Creates a Buy Order
  /info - Shows additional info about the BOT
  /showusername - Toggles off the display of the username in each new order created. Default value is se to no (false)
  /showvolume - shows trade volume when each order is created, default value is *no* (false)
  /setaddress <_order id_> <_wallet address_> - This command allows the buyer to set the wallet address where to receive tokens. 
  /setlang - Allows the user to change the language
  /listorders - Use this command to list all your pending transactions. 
  /listtokens - Lists all supported tokens. 
  /listcurrencies - Lists all the currencies we can use to without indicatin the amount in tokens. 
  /fiatsent <_order id_> - Buyer informs that has already sent FIAT money to seller
  /release <_order id_> - Seller releases the tokens 
  /refund <_order id_> - Seller gets refund on tokens 
  /dispute <_order id_> - Opens a dispute between participant parties
  /cancel <_order id_> - Cancel an order that has not been taken yet
  /cancelall - Cancel all posted and untaken orders

  Communities:
  /community - Create a new community
  /findcomms <_fiat code_> - Finds communities that operate with the indicated currency
  /setcomm <_@groupOfACommunity / off_> - Set a default community or remove it with 'off'
  /deldispute <_username_> <_id order_> - Deletes a dispute from the user in the community, there must be a community by default
  /ban <_username_> - Ban a user from a community, there should be a default community

  /help - help messages
sell_correct_format: |
  /sell \<_token amount_\> \<_token code_\> \<_fiat amount_\> \<_fiat code_\> \<_payment method_\> \[_premium/discount_\]

  In order to create a sell order of 1000 satoshis for 2 Us dollars \(USD\) and indicate that the fiat payment is through transfer or ATM deposit, you must avoid \<\> and \[\]\.

  `/sell 1000 2 USD "transfer or ATM deposit"`

  In order to create a sale with a surplus in the price of 3% \(premium\) you need to add the parameter 0 indicating fiat amount\. The bot will calculate the selling price using the Bitcoin market price and applying the indicated surplus, you need to add 3 as the last parameter

  `/sell 0 2 USD "payment method" 3`

  In order to create a sell by range, instead of indicating a fixed fiat amount you can indicate a miminum and maximum amount to transact separated by a hyphen *\-*

  `/sell 0 100\-500 USD "payment method" 3`
pending_sell: |
  üìù Your sell offer has been published in the ${channel} channel.

  You have to wait until another user picks your order. It will be available for ${orderExpirationWindow} hours in the channel.

  You can cancel this order before another user picks it up by executing the command üëá
begin_take_sell: |
  ü§ñ You took a sell order. 
  
  Please use a fiat payment processor that allows you to send the money immediately and in which there is no risk of freezing funds.

  If you agree with the above, press the Continue button.

  If you press Cancel, you will be released from the order and it will be republished. üëá
wizard_add_wallet_address_init: |
  ü§ñ I need you to send me your wallet address where you'll receive ${formattedAmount} that are worth ${currency} ${fiatAmount} for the order with id ${orderId}.

  If you do not send the address within ${expirationTime} minutes, the order will be cancelled and republished.
wizard_add_wallet_exit: |
  You have exit the wizard mode, you can now write down the commands. You can still add a wallet address to the order with the comand /setaddress indicating Order ID and Wallet Address:

  `/setaddress ${orderId} `\\<wallet address\\>
error_parsing_wallet_address: |
  Error parsing the wallet address. Please copy-paste your RSK address.

  If you want to abort and return to the command entering mode, just run /exit
you_havent_added_wallet_address: |
  ü§® You have not sent the wallet address to receive ${tokenCode} for the order with id ${orderId}. The operation was cancelled.
buyer_hasnt_added_wallet_address_to_admin_channel: 'Buyer @${username} took the order with id ${orderId} but has not sent the wallet address to receive tokens and time has expired.'
lock_tokens_for_sell_order: |
  Somebody took your sell order with id ${order._id} and wants to buy you ${formattedAmount} for ${currency} ${order.fiat_amount}.

  Buyer Reputation: ${rate}

  To start the selling process, please use this link to lock your tokens:

  [Lock ${formattedAmount}](${dappPage}/lock?orderId=${order._id}&token=${order.token_code}&buyerAddress=${order.buyer_address}&buyerHash=${order.buyer_hash}&sellerHash=${order.seller_hash}&amount=${order.amount}&fee=${order.fee})

  You have ${expirationTime} minutes to lock the tokens. After that, the trade will be cancelled and any locked tokens will be refunded to you.
waiting_seller_to_pay: 'I have sent a request to the seller to put ${formattedAmount} under escrow for the order with id ${orderId}. As soon the tokens are locked, I will put you both in touch.'
take_sell_get_in_touch_with_seller: |
  The seller has deposited ${formattedAmount} under escrow for your order with id ${orderId}.

  Get in touch with the seller, @${sellerUsername}, so as to get the details on how to send ${currency} ${fiatAmount} using ${paymentMethod}.

  Once you send the money, please let me know with the command üëá
take_sell_get_in_touch_with_buyer: |
  ü§ñ You have succesfully locked ${formattedAmount} for the order with id ${orderId}.
  
  Get in touch with buyer, @${buyerUsername}, so as to give information on how to send you ${currency} ${fiatAmount} through ${paymentMethod}. Do not release your tokens until you verify that the buyer paid you the fiat.

  Once you confirm the payment, you must release the funds with the /release command.
sell_success: Your sale for order with id ${orderId} has been completed!

buy_correct_format: |
  /buy \<_sats amount_\> \<_fiat amount_\> \<_fiat code_\> \<_payment method_\> \[_premium/discount_\]

  In order to create and order for 1000 satoshis for 2 \(USD\) and indicate that fiat payment is through transfer, you must to omit both \<\> and \[\]\.

  `/buy 1000 2 USD "online transfer"`

  If you do not want to establish a fixed amount of satoshis and you want to buy with a price under market value you can place a buy order establishing a certain discount, such rate is the percentage that will be substracted of market price when your order is published\. You need to specify 0 at the \<_sats amount_\> field, the bot will calculate te price\. If you want to buy with a 2% discount on price market, you should write \-2 as the last parameter

  `/buy 0 2 USD "payment method" \-2`

  If you want to create purchase order by range instead of indicating a fixed Fiat amount, you can set the minimum and maximum to transact separated by a hyphen *\-*

  `/buy 0 100\-500 USD "payment method" \-2`
pending_buy: |
  üìù You buy offer has been published in the ${channel} channel.

  You need to wait until another user picks up the order. It will be available for ${orderExpirationWindow} hours in the channel.

  You can cancel this order before another user picks it up by executing the command üëá
begin_take_buy: |
  ü§ñ You took a buy order.
  
  Please use a fiat payment processor that allows you to receive the money immediately and in which there is no risk of freezing funds.

  If you agree with the above, press the Continue button.

  If you press Cancel, you will be released from the order and it will be republished. üëá
lock_tokens_for_buy_order: |
  ü§ñ I need you to lock ${formattedAmount} that are worth ${currency} ${fiatAmount} to start the trade for the order with id ${order._id}.

  [Lock ${formattedAmount}](${dappPage}/lock?orderId=${order._id}&token=${order.token_code}&buyerAddress=${order.buyer_address}&buyerHash=${order.buyer_hash}&sellerHash=${order.seller_hash}&amount=${order.amount}&fee=${order.fee})

  You have ${expirationTime} minutes to lock the tokens. After that, the trade will be cancelled and any locked tokens will be refunded to you.
you_havent_locked_tokens: |
  ü§® I could not detect that you have locked the tokens for the order with id ${order._id}.

  If you have locked them already, use this link to withdraw your tokens:
  
  [Refund ${formattedAmount}](${dappPage}/refund?orderId=${order._id}&sellerCode=${order.seller_secret})

  You can also get the refund link at any time by using the /refund command.
to_buyer_seller_havent_locked_tokens: |
  üòî Seller has not locked the tokens for the order with id ${orderId}. The operation was cancelled.
to_admin_seller_havent_locked_tokens: 'Seller @${username} has not locked the tokens for order with id ${orderId} and time has expired.'
take_buy_get_in_touch_with_seller: |
  Somebody took your buy order with id ${orderId} and already deposited ${formattedAmount} under escrow for you. 
  
  Get in touch with the seller, @${sellerUsername}, so as to get the details on how to send ${currency} ${fiatAmount} using ${paymentMethod}.

  Seller Reputation: ${rate}

  Once you send the money, please let me know with the command üëá
take_buy_get_in_touch_with_buyer: |
  ü§ñ You have succesfully locked ${formattedAmount} for the order with id ${orderId}.
  
  Get in touch with buyer, @${buyerUsername}, so as to give information on how to send you ${currency} ${fiatAmount} through ${paymentMethod}. Do not release your tokens until you verify that the buyer paid you the fiat.

  Once you confirm the payment, you must release the funds with the /release command.
purchase_success: Your purchase for order with id ${orderId} has been completed!

I_told_seller_you_sent_fiat: ü§ñ I told @${sellerUsername} that you have sent fiat money for the order with id ${orderId}. Once the seller confirms it, ${formattedAmount} should be released to you.
buyer_told_me_that_sent_fiat: |
  ü§ñ @${buyerUsername} has informed that already sent you ${currency} ${fiatAmount} for the order with id ${order._id}.
  
  Once you confirm the payment, please release the funds. You will not be able to create another order until you release funds.

  [Release ${formattedAmount}](${dappPage}/release?orderId=${order._id}&buyerCode=${order.buyer_secret})
rate_counterpart: 'Please qualify your counterparty:'
cancel_order_cmd: |
  /cancel ${orderId}
setaddress_cmd_order: |
  /setaddress ${orderId} \\<wallet address\\>
fiatsent_order_cmd: |
  /fiatsent ${orderId}
release_order_cmd: |
  /release ${orderId}
release_instructions: |
  Use this link to release the funds to the buyer:
  [Release ${formattedAmount}](${dappPage}/release?orderId=${order._id}&buyerCode=${order.buyer_secret})

  Only release the funds after you confirm that the buyer has sent the fiat since this operation cannot be reversed.

  Once you release the funds with the link above, the order will be updated automatically.
refund_instructions: |
  üí∞ Use this link to get a refund on your loked tokens:

  [Refund ${formattedAmount}](${dappPage}/refund?orderId=${order._id}&sellerCode=${order.seller_secret})
ric: ${fieldName} must be numeric
order_id_invalid: Invalid order ID
order_invalid_type: This ${type} order is invalid
order_already_taken: This order has already been taken by another user.
invalid_data: You have sent invalid data, try again.
continue: Continue
cancel: Cancel
invalid_wallet_address: Invalid wallet adress. Please copy-paste your RSK address.
cant_process_order: This order cannot be processed, please check the Id is correct.
cant_release_order: This order cannot be released, the buyer has not sent the wallet address where to pay
no_id_related: You do not have any order associated with this Id.
sell_tokens: Sell ${tokenCode}
buy_tokens: Buy ${tokenCode}
order_detail: |
  Id: ${order._id}
  Status: ${status}
  Creator: @${creator || ''}
  Buyer: @${buyerUsername || ''}
  Seller: @${sellerUsername || ''}
  Order Amount \\(${order.token_code}\\): ${formattedAmount}
  Bot Fee \\(${order.token_code}\\): ${fee}
  Fiat Amount \\(${order.fiat_code}\\) : ${order.fiat_amount}
  Order payment method: ${paymentMethod}
  Premium/discount: ${priceMargin}
  Created: ${createdAt}
  Taken: ${takenAt || ''}
seller: seller
buyer: buyer
dispute_started_channel: |
  User ${type} @${initiatorUser.username} 
  has started a dispute with @${counterPartyUser.username} for the order

  ${detailedOrder}

  @${initiatorUser.username} has been involved in ${initiatorUser.disputes} disputes
  @${counterPartyUser.username} has been involved in ${counterPartyUser.disputes} disputes
you_started_dispute_to_buyer: ü•¥ You have started a dispute for your buy order. We will get in touch with you and your counterparty to sort it out.
buyer_started_dispute_to_seller: 'ü•¥ The buyer has initiated a dispute for your order with id ${orderId}. We will contact you and your counterparty to resolve it.'
you_started_dispute_to_seller: ü•¥ You have started a dispute for your sell order, we will get in touch with you and your counterparty to sort it out.
seller_started_dispute_to_buyer: 'ü•¥ The Seller has initiated a dispute for your order with id ${orderId}, we will contact you and your counterparty to resolve it.'
must_be_valid_token: 'Token_code must be a valid code for example: RBTC, RIF, you can see a complete list executing /listtokens'
must_be_valid_currency: 'Fiat_code must be a valid code for example: USD, EUR, you can see a complete list executing /listcurrencies'
must_be_number_or_range: 'Fiat_amount must be a number or numeric range in the  <minimum>-<maximum> format'
must_be_gt_or_eq: ${fieldName} Must be more or equal to ${qty}
you_have_been_banned: You have been banned!
you_have_orders_waiting: ü§ñ you have one or more orders where the buyer informs that the fiat money was sent to you but you haven¬¥t released the funds yet. You will not be able to create new orders until you release such funds.
user_banned: Banned user!
user_not_found: User was not found in the database!
invalid_id: Invalid Id
cant_take_own_order: You cannot take your own order.
send_me_wallet_address: Please send me the wallet address to receive ${formattedAmount}.
you_have_no_orders: You don't have active orders
no_rate_for_currency: |
  ${fiatRateProvider} Theres is no exchange rate for this currency,
  if you want to use this currency you must indicate how many tokens you want
  If you woud like this currency in the listing go to this link to place a request. üëá

  üåê https://yadio.io/api.html
no_rate_for_token: |
  ${fiatRateProvider} Theres is no exchange rate for this currency,
  if you want to use this currency you must indicate how many tokens you want
  If you woud like this currency in the listing go to this link to place a request. üëá

  üåê https://api3.org/beacons
invoice_already_being_paid: You have alreday send an invoice for this order and I am trying to pay it in this very rightmoment.
cancel_error: This order cannot be cancelled at this moment
cancel_success: 'You have cancelled the order with id ${orderId}.'
cancelall_success: You have cancelled all your published orders!
order_cancelled_by_admin: 'Admin has cancelled the order with id ${orderId}!'
order_completed: 'You have completed the order with id ${orderId}!'
order_completed_by_admin: 'Admin has completed the order with id ${orderId}!'
have_to_wait_for_counterpart: üïí You have already made this operation, you must wait for the other party to take action
ok_cooperativecancel: 'üëç Counterparty agreed and the order with id ${orderId} has been cancelled.'
refund_cooperativecancel: |
  üí∞ Use this link to get a refund on your loked tokens:

  [Refund ${formattedAmount}](${dappPage}/refund?orderId=${order._id}&sellerCode=${order.seller_secret})

  You can also get the refund link at any time by using the /refund command.
init_cooperativecancel: 'üïí You have started the cancelation of the order with id ${orderId}. Your counterparty must agree on cancellation too.'
counterparty_wants_cooperativecancel: 'üò≥ Your counterparty wants to cancel the order with id ${orderId}. If you agree on such cancellation, please execute the following command üëá'
cant_take_more_orders: ‚õî Sorry! You can't take another order while you have others waiting for you
seller_released: üí∏ Seller has already released your funds.
problem_getting_price: There is a problem accessing this coin price, please try later, if the problem persists, please contact an administrator.
update_user_setting: I have modify the field  ${field} to ${newState}
invalid_range_with_amount: |
  Ranges are only avialble for floating rates

  Use ranges or specify the amount of tokens, but do not write both of them
too_many_pending_orders: You have reached the maximum amount of orders that can be published simultaneously
name: Name
group: Group
channel: Channel
solver: Solver
published: Published
created: Created
yes: Yes
no: No
wizard_community_enter_name: Pick a name for your community
wizard_community_too_long_name: The name can have a maximum length of ${length} characters.
wizard_community_enter_currency: Enter the code of the fiat currency(ies) with which users can operate in this community, if there is more than one you must enter each code separated by a blank space.
wizard_community_enter_group: |
  Pick an ID or a name for the group, you must be the adminsitrator of the group, as well as the Bot:

  i.e: @MyCommunity
wizard_community_enter_order_channels: |
  All orders of your community must be published in a telegram channel if you indicate me only one channel both Buy and Sell orders will be published there.

  If you indicate two channels Buy orders will be place in one and Sell orders in the other. Both you and the Bot must be adminsitrators in both channels.

  Please indicate the name of the channel or in case you want to use two chanels, indicate both names separated by a space.

  i.e : @MyCommunitySell  @MyCommunityBuy
wizard_community_one_or_two_channels: You must indicate either one or two channels
wizard_community_enter_solvers: Now please write down the names of the users that will sort out disputes, each of them separated by a space.
wizard_community_must_enter_names: You must add at least one name, or two separated by a space
wizard_community_enter_solvers_channel: Idicate the id or name of the chanell that the bot must use to alert when a dispute is called, please use @ at the beginning of the channel name.
wizard_community_success: Congratulations, you have created your community!
wizard_community_wrong_permissions: You do not have administrator permits for this group or channel
wizard_community_you_are_not_admin: ${username} is not an admin on ${channel}.
wizard_to_exit: /exit to exit the wizard.
wizard_exit: You have exit wizard mode, you can now write commands
wizard_add_fiat_amount: |
  Please indicate the amount of ${currency} that you want to ${action}.

  Remember it must be only numbers and be between ${minAmount} and ${maxAmount}:
wizard_add_fiat_wrong_amount: Invalid amount, input must be between ${minAmount} and ${maxAmount}, it must be only numbers.
wizard_add_fiat_correct_amount: 'Amount: ${currency} ${fiatAmount}.'
order_expired: This order has expired!
cant_add_wallet_address: You can no longer add a wallet address to this order!
expired_order: |
  This order has expired without completion:

  ${detailedOrder}

  @${buyerUsername} has ${seller.disputes} disputes
  @${sellerUsername} has ${buyer.disputes} disputes
expired_order_to_buyer: |
  üö®üö®üö® The order with id ${order._id} is about to expire and must be completed or cancelled immediately. 
  
  If you haven't sent the fiat money yet, you can still cancel the order with the /cancel command.

  If you sent the fiat money but the seller refuses to release the funds, you can open a dispute with the /dispute command.

  If you need help, you can write to the group ${helpGroup}.
expired_order_to_seller: |
  üö®üö®üö® The order with id ${order._id} is about to expire and must be completed or cancelled immediately.
  
  If you have not received the fiat money yet, you can still cancel the order with the /cancel command.
 
  If you received the fiat money, please release the funds, otherwise you are under the risk of the buyer opening a dispute which will affect your reputation.
  
  Use this link to release the funds:
  [Release ${formattedAmount}](${dappPage}/release?orderId=${order._id}&buyerCode=${order.buyer_secret})

  If you need help, you can write to the group ${helpGroup}.
selling: Selling
buying: Buying
receive_payment: Receive payment
pay: Pay
is: is
trading_volume: 'Trading volume: ${volume} sats'
satoshis: satoshis
by: by
rate: Rate
has_successful_trades: Has ${trades} successful trades
order_price: Order price
fair_price: Fair market price
for: For
generic_error: An error occurred
sats: sats
no_capital_letters: ü§ñ You are trying to execute a command with the first letter capitalized. Please write the entire command in lowercase.
unknown_command: üòï I do not understand. Please use /help to see the list of available commands
hours: hours
minutes: minutes
community_updated: Community successfully updated
operation_successful: Operation successful!
select_community: Select the community
what_modify: What do you want to modify?
channels: Channels
dispute_solvers: Solvers
no_default_community: You no longer have a community by default
community_not_found: Community not found
currency: Currency
currencies: Currencies
currency_not_supported: This currency cannot be used in this community, it is only allowed to use [${currencies}]
press_to_continue: Press the button to continue
receive: receive
send: send
new_dispute: ‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è A user has started a dispute, touch the button to take it
take_dispute: Take dispute
not_authorized: ü§® You are not authorized to perform this operation
need_default_community: To perform this operation you need to have a default community
enter_token_amount: Enter ${tokenCode} amount (e.g, 0.0001)
market_price: Market price (API3 + Yadio)
enter_currency: 'Enter a currency by your code, eg: USD'
choose_currency: Choose a currency
enter_token: 'Enter a currency by your code, eg: RBTC'
choose_token: Choose a token
enter_currency_amount: Enter the amount of ${currency}, enter only numbers.
enter_premium_discount: Enter the premium(+) or discount(-) to apply to the market price.
no_premium_or_discount: No premium or discount
enter_payment_method: Enter the payment method
invalid_currency: Invalid currency
invalid_token: Invalid currency
invalid_amount: Invalid amount
not_number: It must be a number
not_zero: Cannot be 0 (zero)
not_negative: Cannot be a negative number
wizard_community_wrong_percent: The percentage must be between 0 and 100
wizard_community_enter_fee_percent: |
  Enter the fee:

  The fee in a community is variable and is indicated as a percentage from 0 to 100, if you do not want to charge fee, indicate 0, if you want to charge half of the maximum value, indicate 50, if you want it to have the maximum value, indicate 100.
fee: Fee
use_default: Use by default
orders: Orders
volume: Volume
users: Users
not_found_dispute: There is no dispute for this order
max_allowed: The maximum allowed is ${max}
dispute_channel: Dispute channel
not_wizard: You are not in wizard mode at the moment, if you have doubts you can type /help
wizard_help: You are in wizard mode, if you need to go back to command mode run /exit
hold_invoice_memo: '@${botName} - Escrow amount Order #${orderId}: SELL BTC for ${fiatCode} ${fiatAmount} - It WILL FREEZE IN WALLET. It will release once you run /release. It will return if buyer does not confirm the payment'
tap_button: Select an order to perform the operation
tap_release: Select the order to release the funds, once you touch the button the operation cannot be reversed.
earnings: Earnings
premium: Premium
discount: Discount
premium_discount: premium/discount
withdraw_earnings: Withdraw earnings
invoice_expired_earnings: The invoice has expired, resubmit a withdrawal request with a new invoice.
what_to_do: What do you want to do?
community: Community
seller_already_released: Don't worry the seller already released the funds ü•≤
select_language: Select language
must_enter_text: You must enter only text
current_earnings: |
  Orders completed so far in the community: ${ordersToRedeem}

  Community Earnings: ${earnings} sats
you_dont_have_communities: You have no communities created
users_added: 'You have added: ${users}'
users_not_added: 'Could not add to: ${users}; please make sure these users have started the bot'
